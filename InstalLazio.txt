
# EYESY_OS_RasPi

The operating system for the EYESY video synthesizer device - remixed.

Adaptation of the Critter&Guitari Eyesy video synth in order to run it on a regular Raspberry Pi
Eyesy Manual : https://www.critterandguitari.com/manual?m=EYESY_Manual#eyesy%E2%84%A2-user-manual


### Installation :

Scaricare raspbian lite
sudo raspi-config: 
- configurare WLAN
- Change password: music
- Network > Hostname: eyesy
- abilitare SSH
-Localization: timezone, keyboard, wifi
--- Exit, Reboot
                                     
relogin (attenzione: ora la password è music)
sudo apt-get update
sudo apt-get upgrade
sudo reboot

* change user name: music

1  `sudo passwd root`  --> cambiare la password in "root" (!)
2. logout, login as root
Creare user 'music':
  usermod -l music -d /home/music -m pi
  groupmod --new-name music pi

logout, quindi login as music

disable need for passwd with sudo:
sudo passwd -l root
sudo nano /etc/sudoers.d/010_pi-nopasswd
change 'pi' to 'music'
reboot

raspi-config
selezionare driver full KMS
(raspberry si riavvierà)
   
installare prerequisiti:
sudo apt-get install -y --no-install-recommends screen vim git make xserver-xorg xinit raspberrypi-ui-mods perl mc
reboot


A questo punto, con partition manager RIPARTIZIONARE la sdcard creando una terza partizione:
/boot (part 1)
/rootfs (part 2)
/ <---- Nuova partizione (part 3), dove verranno memorizzati tutti i preset
Per fare ciò, la sticca usba NON deve essere montata (tasto destro/Unmount DA DENTRO PARTITION MANAGER)






git clone https://github.com/The-XOR/EYESY_OS.git --depth=1
cd EYESY_OS


	Note - EYESY is looking for your sound card to be the "default" device.
	Inserire nello slotto usbo la sound card che si intende utilizzare (per es la cara vecchia barbonger uca222) aplay -l si ottiene un output tipo questo:

	**** List of PLAYBACK Hardware Devices **** card 1: CODEC [USB Audio CODEC], device 0: USB Audio [USB Audio] Subdevices: 1/1 Subdevice #0: subdevice #0

	annotarsi il n. di card della scheda che si vuole utilizzare

	cd ~/EYESY_OS/config 
	nano asound.conf <----- inserire qui il numero di card annotato in precedenza (per default, 1)

   
./deploy.sh
reboot  

./deploy2.sh


raspi-config: abilitare autologin con desktop (startx deve essere avviato)

startx
Avviare puredata

*** obsoleto
  installare openframework:
  seguire le istruzioni su
  https://openframeworks.cc/setup/raspberrypi/raspberry-pi-getting-started/
  1. scaricare da https://github.com/openframeworks/openFrameworks/releases 
    l'ultima versione disponibile per armv6l
  2. cd /home/music/openFrameworks/scripts/linux/debian
  3. sudo ./install_dependencies.sh
  4. sudo ./install_codecs.sh
  5. cd OF/scripts/linux
    ./compileOF.sh
  6. make Release -C /home/music/openFrameworks/libs/openFrameworksCompiled/project

  installare lua addon:
  https://github.com/danomatika/ofxLua
*** obsoleto
installare openFrameworks con
./install_lua.sh



### Control:

+++++ LEMUR!
Implementanta una splendida patch per Lemur, molto piu completa di quella fatta con TouchOSC

**Control via TouchOSC:**
- Download and install the TouchOSC app for your iOS or Android device (it is not free, I've been looking for free/open-source alternatives, please let me know if you know one; nevertheless, this app is well developed and it's also nice to suppot this kind of effort I believe)
- Copiare il profilo touchosc sul device da utilizzare and import it via the app (in Layout).
- In the OSC setting of the app set Host to the ip adress of your pi (your device and your pi must be on the same network)
- Set the outgoing port to `4000` and ingoing to `4001`
- You're `Done`!
 
 
**Control via midi in messages (should be plug and play):**
  | Midi CC    | 21,22,23,24 | 25               | 26               | 27               | 28                | 29                | 30              | 31        | 32           | 33              | 34                         | 35       |
  |-------|-------------|------------------|----------------------|-------------------|---------------------|-----------|--------------|-----------------|----------------------------|----------|------------|----------------|
  | Control | Mode Params | Background Color | Scene selection | Save or delete (long hold) | Auto Clear Toggle | Mode Selection | Take Screenshot | Info Disp | Send Trigger | ShiftKey | Input Gain | Trigger Source |


### Web Editor
The web editor lets you edit the pygame scripts that generate the visuals on the fly. It should be accessible at http://eyesy.local:8080/ (or IP:8080 where IP is the current ip adress of your Pi)

See the Eyesy manual for more details on using the web editor.

### Rem:

- You can use the stereo input in your Modes, in Python there are accessible via `etc.audio_left` and `etc.audio_right` in the scripts, `etc.audio_in` remains L+R

